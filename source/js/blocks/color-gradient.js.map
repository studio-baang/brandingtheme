{"mappings":"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","sources":["dev/js/modules/convert-color.js","dev/js/component/color-chip-comp.js","dev/js/component/color-gradient-comp.js","dev/js/blocks/color-gradient.js"],"sourcesContent":["function sliceHEX(colorHEX) {\n\treturn {\n\t\tr: colorHEX.slice(1, 3),\n\t\tg: colorHEX.slice(3, 5),\n\t\tb: colorHEX.slice(5, 7),\n\t};\n}\n\nfunction HEXtoRGBrange(colorHEX) {\n\tconst { r, g, b } = HEXtoRGB(colorHEX);\n\treturn {\n\t\tr: r / 255,\n\t\tg: g / 255,\n\t\tb: b / 255,\n\t};\n}\n\nfunction HEXtoRGB(colorHEX) {\n\tconst { r, g, b } = sliceHEX(colorHEX);\n\n\treturn {\n\t\tr: parseInt(r, 16),\n\t\tg: parseInt(g, 16),\n\t\tb: parseInt(b, 16),\n\t};\n}\n\nfunction checkBrightness(colorHEX) {\n\tconst { r, g, b } = HEXtoRGBrange(colorHEX);\n\tconst average = (r + g + b) / 3;\n\treturn average >= 0.6 ? true : false;\n}\n\nfunction RGBtoHEX(RGB) {\n\tconst { r, g, b } = RGB;\n\n\tconst getHexVaule = (number) => {\n\t\tconst numerHex = number.toString(16);\n\t\treturn numerHex.length < 2 ? \"0\" + numerHex : numerHex;\n\t};\n\n\treturn \"#\" + getHexVaule(r) + getHexVaule(g) + getHexVaule(b);\n}\n\nfunction HEXtoCMYK(colorHEX) {\n\tconst { r, g, b } = HEXtoRGBrange(colorHEX);\n\n\tconst calcPercent = (value) => Math.round(value * 100);\n\n\tconst black = 1 - Math.max(r, g, b);\n\tconst calcCMY = (value) => (1 - value - black) / (1 - black) || 0;\n\n\treturn {\n\t\tc: calcPercent(calcCMY(r)),\n\t\tm: calcPercent(calcCMY(g)),\n\t\ty: calcPercent(calcCMY(b)),\n\t\tk: calcPercent(black),\n\t};\n}\n\nfunction createGradientArray(props) {\n\tconst { level, startColor, endColor } = props;\n\tconst colorGroup = [];\n\n\tconst startColorSliceRGB = HEXtoRGB(startColor);\n\tconst endColorSlideRGB = HEXtoRGB(endColor);\n\n\tconst calcGradientRGB = (index) => {\n\t\tconst first = startColorSliceRGB;\n\t\tconst last = endColorSlideRGB;\n\n\t\tconst calcValue = (firstValue, lastValue) =>\n\t\t\tMath.round(firstValue + (index / level) * (lastValue - firstValue));\n\n\t\treturn {\n\t\t\tr: calcValue(first.r, last.r),\n\t\t\tg: calcValue(first.g, last.g),\n\t\t\tb: calcValue(first.b, last.b),\n\t\t};\n\t};\n\n\tcolorGroup.push(startColor);\n\n\tif (level > 0) {\n\t\tconst limitLevel = Math.max(Math.min(level, 10), 1);\n\t\tfor (let i = 1; i < limitLevel; i++) {\n\t\t\tcolorGroup.push(RGBtoHEX(calcGradientRGB(i)));\n\t\t}\n\t\tcolorGroup.push(endColor);\n\t}\n\n\treturn colorGroup;\n}\n\nexport { checkBrightness, HEXtoRGB, HEXtoCMYK, createGradientArray };\n","import { checkBrightness, HEXtoRGB, HEXtoCMYK } from \"../modules/convert-color\";\n\nconst el = wp.element.createElement;\nconst components = window.wp.components;\n\nfunction ChipTitle(props) {\n\tconst name = props.name;\n\treturn name != null\n\t\t? el(\"h2\", { class: \"color-chip__title\" }, `${name}`)\n\t\t: \"\";\n}\n\nfunction ChipDataList(props) {\n\tconst hex = props.color;\n\n\tconst { r, g, b } = HEXtoRGB(hex);\n\tconst { c, m, y, k } = HEXtoCMYK(hex);\n\n\treturn el(\n\t\t\"dl\",\n\t\t{ class: \"color-chip__list\" },\n\t\tel(\"dt\", { class: \"color-chip__type\" }, \"HEX\"),\n\t\tel(\"dd\", { class: \"color-chip__value\" }, `${hex}`),\n\t\tel(\"dt\", { class: \"color-chip__type\" }, \"RGB\"),\n\t\tel(\"dd\", { class: \"color-chip__value\" }, `${r} ${g} ${b}`),\n\t\tel(\"dt\", { class: \"color-chip__type\" }, \"CMYK\"),\n\t\tel(\"dd\", { class: \"color-chip__value\" }, `${c}% ${m}% ${y}% ${k}%`)\n\t);\n}\n\nexport function EditColorChip(props) {\n\tconst {\n\t\tattributes: { name, color },\n\t\tsetAttributes,\n\t} = props;\n\n\tconst editName = (event) => {\n\t\tsetAttributes({ name: event.target.value });\n\t};\n\n\tconst editColor = (val) => {\n\t\tsetAttributes({ color: val });\n\t};\n\n\treturn el(\n\t\t\"div\",\n\t\t{ className: \"edit-color-chip\" },\n\t\tel(\"input\", {\n\t\t\ttype: \"text\",\n\t\t\tvalue: name,\n\t\t\tonChange: editName,\n\t\t\tplaceholder: \"칩 이름을 기입하세요\",\n\t\t}),\n\t\tel(components.ColorPicker, {\n\t\t\tcopyFormat: \"hex\",\n\t\t\tcolor: color,\n\t\t\tonChange: editColor,\n\t\t})\n\t);\n}\n\nexport function ColorChip(props) {\n\tconst { name, color } = props.attributes;\n\n\tconst styled = {\n\t\tbackgroundColor: `${color}`,\n\t\tcolor: !checkBrightness(color) ? \"#ffffff\" : \"#000000\",\n\t};\n\n\treturn el(\n\t\t\"div\",\n\t\t{ class: \"color-chip\", style: styled },\n\t\tel(ChipTitle, { name }),\n\t\tel(ChipDataList, { color })\n\t);\n}\n","import { createGradientArray } from \"../modules/convert-color\";\nimport { ColorChip } from \"./color-chip-comp\";\n\nconst el = wp.element.createElement,\n\tuseBlockProps = wp.blockEditor.useBlockProps,\n\tcomponent = wp.components;\n\nfunction EntryDesc(props) {\n\tconst { title, desc } = props;\n\tconst styled = {\n\t\twhiteSpace: \"pre-line\",\n\t};\n\n\treturn [el(\"h3\", { style: styled }, title), el(\"p\", { style: styled }, desc)];\n}\n\nexport function EditGradient(props) {\n\tconst blockprops = useBlockProps();\n\tconst {\n\t\tattributes: { level, startColor, endColor },\n\t\tsetAttributes,\n\t} = props;\n\n\tconst editLevel = (val) => {\n\t\tsetAttributes({ level: Number(val.target.value) });\n\t};\n\n\tconst editStartColor = (val) => {\n\t\tsetAttributes({ startColor: val });\n\t};\n\n\tconst editEndColor = (val) => {\n\t\tsetAttributes({ endColor: val });\n\t};\n\n\treturn el(\n\t\t\"div\",\n\t\tObject.assign(blockprops, {\n\t\t\tstyle: {\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\tgap: \"1em\",\n\t\t\t},\n\t\t}),\n\t\tel(\n\t\t\t\"div\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tgap: \"1em\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tel(\"input\", {\n\t\t\t\ttype: \"number\",\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 10,\n\t\t\t\tvalue: level,\n\t\t\t\tonChange: editLevel,\n\t\t\t}),\n\t\t\tel(\"input\", {\n\t\t\t\ttype: \"range\",\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 10,\n\t\t\t\tvalue: level,\n\t\t\t\tonChange: editLevel,\n\t\t\t})\n\t\t),\n\t\tel(\n\t\t\t\"div\",\n\t\t\t{\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tgap: \"1em\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tel(\n\t\t\t\t\"div\",\n\t\t\t\tnull,\n\t\t\t\tel(EntryDesc, {\n\t\t\t\t\ttitle: \"그라디언트 시작 색상\",\n\t\t\t\t\tdesc: `그라디언트 시작 색상을 지정합니다.\\n기본값 : #ffffff`,\n\t\t\t\t}),\n\t\t\t\tel(component.ColorPicker, {\n\t\t\t\t\tcopyFormat: \"hex\",\n\t\t\t\t\tcolor: startColor,\n\t\t\t\t\tonChange: editStartColor,\n\t\t\t\t})\n\t\t\t),\n\t\t\tel(\n\t\t\t\t\"div\",\n\t\t\t\tnull,\n\t\t\t\tel(EntryDesc, {\n\t\t\t\t\ttitle: \"그라디언트 끝 색상\",\n\t\t\t\t\tdesc: `그라디언트 끝 색상을 지정합니다. \\n 기본값 : #000000`,\n\t\t\t\t}),\n\t\t\t\tel(component.ColorPicker, {\n\t\t\t\t\tcopyFormat: \"hex\",\n\t\t\t\t\tcolor: endColor,\n\t\t\t\t\tonChange: editEndColor,\n\t\t\t\t})\n\t\t\t)\n\t\t)\n\t);\n}\n\nexport function Gradient(props) {\n\tconst colorArray = createGradientArray(props.attributes);\n\n\tconst content = colorArray.map((color) =>\n\t\tel(ColorChip, {\n\t\t\tattributes: {\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t})\n\t);\n\n\treturn el(\n\t\t\"div\",\n\t\t{ className: \"color-guide__list color-guide__list--gradient\" },\n\t\tcontent\n\t);\n}\n","import { EditGradient, Gradient } from \"../component/color-gradient-comp\";\n\n(function (blocks) {\n\tconst registerBlockType = blocks.registerBlockType;\n\n\tregisterBlockType(\"studio-baang/color-gradient\", {\n\t\tapiVersion: 2,\n\t\ttitle: \"컬러 그라디언트\",\n\t\tcategory: \"design\",\n\t\ticon: \"lightbulb\",\n\t\tdescription: \"그라디언트 컬러 리스트를 생성합니다.\",\n\t\tparent: [\"studio-baang/color-guide\"],\n\n\t\tattributes: {\n\t\t\tlevel: {\n\t\t\t\ttype: \"number\",\n\t\t\t\tdefault: 0,\n\t\t\t},\n\t\t\tstartColor: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tdefault: \"#ffffff\",\n\t\t\t},\n\t\t\tendColor: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tdefault: \"#000000\",\n\t\t\t},\n\t\t\tcolorArray: {\n\t\t\t\ttype: \"array\",\n\t\t\t\tdefault: [],\n\t\t\t},\n\t\t},\n\n\t\tedit: EditGradient,\n\n\t\tsave: Gradient,\n\t});\n})(window.wp.blocks);\n"],"names":["$db72cf66051b9ac1$var$HEXtoRGBrange","colorHEX","r","g","b","$db72cf66051b9ac1$export$e1ee88b022ef5327","slice","$db72cf66051b9ac1$var$sliceHEX","parseInt","$db72cf66051b9ac1$export$6db3d78ff882ad7e","$db72cf66051b9ac1$var$RGBtoHEX","RGB","getHexVaule","number","numerHex","toString","length","$db72cf66051b9ac1$export$e2796f86add8d121","calcPercent","value","Math","round","black","max","calcCMY","c","m","y","k","$db72cf66051b9ac1$export$616fb78dfd650fd7","props","level","startColor","endColor","colorGroup","startColorSliceRGB","endColorSlideRGB","calcGradientRGB","index","first","last","calcValue","firstValue","lastValue","push","limitLevel","min","i","$f317446863c0510f$var$el","wp","element","createElement","window","components","$f317446863c0510f$var$ChipTitle","name","class","$f317446863c0510f$var$ChipDataList","hex","color","$f317446863c0510f$export$43e54f70144d08dc","attributes","styled","backgroundColor","style","$5e3980175423064b$var$el","$5e3980175423064b$var$useBlockProps","blockEditor","useBlockProps","$5e3980175423064b$var$component","$5e3980175423064b$var$EntryDesc","title","desc","whiteSpace","$5e3980175423064b$export$d005b42b91a7958d","blockprops","setAttributes","editLevel","val","Number","target","Object","assign","display","flexDirection","gap","type","onChange","ColorPicker","copyFormat","$5e3980175423064b$export$3d3dd8f63ff0f876","content","map","className","registerBlockType","blocks","apiVersion","category","icon","description","parent","default","colorArray","edit","save"],"version":3,"file":"color-gradient.js.map"}